File Conversion Project Setup Guide
This document contains all the code and setup notes required for the file conversion project, which is designed to run the heavy lifting on a dedicated Debian server via Docker and be accessed by a lightweight Cloudflare Pages frontend.

1. Project Files (Dockerfile and app.py)
You will need to create and commit these two files to your GitHub repository in the root of the server project directory.

Dockerfile
This defines the stable Ubuntu base image containing Python, Flask, Gunicorn, LibreOffice, FFmpeg, and critical headless libraries necessary for complex document and media conversion.

app.py (Python/Flask API)
This Python script handles file uploads, calls LibreOffice or FFmpeg via subprocesses, and securely cleans up temporary files after conversion. It includes necessary fixes for headless LibreOffice stability.

2. Operational Setup and Context
This section summarizes the deployment environment and the goal of the current debugging effort. This is vital context for any collaborator.

Architecture
Frontend: Hosted on Cloudflare Pages (static HTML/JS/CSS).

Backend API: Hosted on your Debian 12 server inside a Docker container.

Networking: Uses a Cloudflare Tunnel to route traffic securely from the public URL https://cnvt.yourdsgn.pro to the local Docker service on http://localhost:8081.

The API listens internally on container port 8080, mapped to host port 8081.

Conversion Tools: LibreOffice (documents/PDF) and FFmpeg (media/images).

Current Goal & Problem
The current goal is to stabilize PDF/DOCX conversion. The server is correctly running, but workers are silently crashing or hanging when processing complex files like PDF, indicating a low-level LibreOffice resource or permission error is occurring, which Python is failing to log gracefully.

Docker Execution Commands
The user runs the service using:

Bash

# 1. Build the image
sudo docker build -t cnvt-api .

# 2. Run the container with volume mount for temp files
sudo docker run -d \
  --restart always \
  -p 8081:8080 \
  -v /yourdsgnpro/file-converter/data:/tmp/uploads \
  --name file-converter-api \
  cnvt-api

# 3. Check logs after a conversion attempt (to find the subprocess error)
docker logs file-converter-api